name: Givt Platform workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request
  push:
    branches: [ main, pre-main ]
  pull_request:
jobs:
  local-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup dotnet v6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.x'
      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

  docker-build-deploy:
    needs: local-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set short sha output
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          ## TODO add check again after testing
          # Only push image when on main (production) and pre-main (development)
          ##push: ${{ GitHub.event_name != 'pull_request' }}
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/platform-api:${{ endsWith(github.ref, '/main') && 'production' || 'development' }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/platform-api:${{ github.run_number }}.${{ github.run_attempt }}.${{ steps.vars.outputs.sha_short }}
            ${{ endsWith(github.ref, '/main') && format('{0}/platform-api:latest', ${{ secrets.DOCKER_HUB_USERNAME }})}}

      - name: Connect to k8s cluster
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBERNETES_GITHUB_SERVICE_ACCOUNT }}

      - name: Deploy in k8s
        uses: Azure/k8s-deploy@v3.1
        with:
          namespace: "givt-platform-staging"
          manifests: |
            deployment.yaml
          images: "${{ secrets.DOCKER_HUB_USERNAME }}/platform-api:${{ github.run_number }}.${{ github.run_attempt }}.${{ steps.vars.outputs.sha_short }}"
